: ${bt:=/data/school/06_BT}

rnas_pkgs=("" -cli -web -worker)
rnas_pkgs=("${rnas_pkgs[@]/#/rna-seqlyze}")

rnas_topdir=$bt
rnas_pkgdirs=("${rnas_pkgs[@]/#/$rnas_topdir/src/}")

if [ "$PS1" ]
then
	dirs -c
	for ((i=${#rnas_pkgdirs[@]}-1; i>0; i--))
	do
		pkg=${rnas_pkgdirs[i]##*-}
		pushd "${rnas_pkgdirs[i]}/rnaseqlyze/$pkg"
	done
	pushd "${rnas_pkgdirs[0]}/rnaseqlyze/core"
	pushd "${rnas_pkgdirs[0]}/rnaseqlyze"
	cd "$rnas_topdir"
fi

buildbot ()
(
	set -e
	cd ~/buildbot-virtualenv
	. bin/activate
	command buildbot $1 buildmaster
	command buildslave $1 buildslave
)

viall()
{
	cd $rnas_topdir/src
	vi $(find rna-seqlyze* -\( -name junk -o -name setup.py -\) -prune -o 	\
		-\( -name "*.pt" -o -\( -name "*.py" -\(			\
			-not -name __init__.py -o				\
			-size +1 -exec sed -n '1{/^__/{q1}}' {} \; -\) -\) -\)	\
										\
			-print | tr '/-' '[]' | sort | tr '[]' '/-')
}

sigint ()
{
	curl localhost/biopython/debug?{sig_int,sig_int}
}

re-apidoc()
(
	cd $rnas_topdir/report/apidoc
	rm -f rnaseqlyze*.rst
	rnas-apidoc ${rnas_pkgdirs[0]}
	make html
)

re-install ()
{
	for dir in "${rnas_pkgdirs[@]}"
	do (
		cd "$dir"
		python setup.py develop --user
		rm -rf build 
	) done
}

re-cover ()
{
	# compute test coverage
	#  --cover-inclusive: include modules not loaded by test scripts
	#  --cover-package: restrict coverage report to packge
	#  --cover-html: generate html coverage report
	(
		cd "$rnas_topdir"
		nosetests --with-coverage		\
			--cover-inclusive		\
			--cover-package rnaseqlyze	\
			--cover-html --cover-html-dir=report/coverage "${rnas_pkgdirs[@]}"
		rm -f .coverage
	)
}

logtail-developall ()
{
	(
		cd $rnas_topdir
		while true
		do
			pserve --reload src/rna-seqlyze-worker/development.ini
			sleep 10
		done
	) &
	auto-restart-mod-wsgi "${rnas_pkgdirs[@]}" &
	tail -f /var/log/apache2/{access,error}.log \
		$rnas_topdir/src/rna-seqlyze-{web,worker}/*.log
}

# vim: ft=sh
